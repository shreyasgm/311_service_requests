{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/roc8917/Documents/GitHub/boston-311/src/app/api/chat/route.ts"],"sourcesContent":["import { openai } from '@ai-sdk/openai';\nimport { streamText } from 'ai';\n\n// Allow streaming responses up to 30 seconds\nexport const maxDuration = 30;\n\nexport async function POST(req: Request) {\n  try {\n    if (!process.env.OPENAI_API_KEY) {\n      throw new Error('OPENAI_API_KEY is not set');\n    }\n\n    const { messages } = await req.json();\n\n    const result = streamText({\n      model: openai('gpt-4-turbo'),\n      system: 'You are a helpful assistant.',\n      messages,\n    });\n\n    return result.toDataStreamResponse();\n  } catch (error) {\n    console.error('Chat API Error:', error);\n    return new Response(\n      JSON.stringify({ error: error instanceof Error ? error.message : 'An error occurred' }),\n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,MAAM,cAAc;AAEpB,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;YAC/B,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAEnC,MAAM,SAAS,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAD,EAAE;YACxB,OAAO,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE;YACd,QAAQ;YACR;QACF;QAEA,OAAO,OAAO,oBAAoB;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAAoB,IACrF;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEnE;AACF","debugId":null}}]
}